{"name": "test_add[args1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 400\n +  where 400 = <built-in method get of dict object at 0x144164080>('code')\n +    where <built-in method get of dict object at 0x144164080> = {'code': 400, 'msg': '请输入编号！', 'traceId': 'c1b641e519be56b9'}.get", "trace": "self = <test_api.script.test_04stash_add.Testadd object at 0x1440b0940>\nargs = {'casename': '用户新增', 'data': {'address': '上海', 'cityId': 110101, 'code': None, 'contact': '小红', ...}}\n\n    @pytest.mark.parametrize('args', readline('/Users/yangayangdemac/pythonProject/SDYERP/test_api/data/stash_add.yml'))\n    def test_add(self,args):\n        data1=args.get(\"data\",{})\n        user=data1.get(\"login_username\")\n        pwd=data1.get(\"login_password\")\n        contact=data1.get(\"contact\")\n        description=data1.get(\"description\")\n        address=data1.get(\"address\")\n        peopleNum=data1.get(\"peopleNum\")\n        telephone=data1.get(\"telephone\")\n        is_random_name=data1.get(\"is_random_name\",False)\n        is_random_code=data1.get(\"is_random_code\",False)\n        #随机编号，避免重复\n        is_randon=data1.get(\"is_random\",False)\n        cityId=data1.get(\"cityId\")\n        self.num = randint(0000, 9999)\n        if is_randon:\n            code=self.num\n            name=\"仓库\"+ str(self.num)\n        elif is_random_name:\n            name = \"仓库\" + str(self.num)\n            code = data1.get(\"code\")\n        elif is_random_code:\n            code = self.num\n            name = data1.get(\"name\")\n        else:\n            name = data1.get(\"name\")\n            code = data1.get(\"code\")\n        login_data = {\n            \"code\": code,\n            \"contact\": contact,\n            \"description\": description,\n            \"name\": name,\n            \"address\": address,\n            \"peopleNum\":peopleNum,\n            \"telephone\":telephone,\n            \"cityId\":cityId\n        }\n        rev_add=self.add_api.add(username=user,password=pwd,test_data=login_data)\n        print(rev_add.json())\n        r_j=rev_add.json()\n        # 断言\n        if is_random_name or is_random_code:\n            msg = rev_add.json().get(\"msg\")\n>           assert 500 == r_j.get(\"code\")\nE           AssertionError: assert 500 == 400\nE            +  where 400 = <built-in method get of dict object at 0x144164080>('code')\nE            +    where <built-in method get of dict object at 0x144164080> = {'code': 400, 'msg': '请输入编号！', 'traceId': 'c1b641e519be56b9'}.get\n\ntest_04stash_add.py:63: AssertionError"}, "parameters": [{"name": "args", "value": "{'casename': '用户新增', 'data': {'login_username': '1000@superadmin', 'login_password': 123456, 'code': None, 'contact': '小红', 'address': '上海', 'name': None, 'peopleNum': 100, 'description': '测试仓库', 'telephone': 13877778888, 'is_random_name': True, 'cityId': 110101}}"}], "start": 1732789103084, "stop": 1732789103407, "uuid": "1040381e-3e53-4938-8f96-d4cc9cf63743", "historyId": "191b43df7dc38436e0d4e97f5a055796", "testCaseId": "a0069720cd100b8f3e99ffc8acfa6a24", "fullName": "test_api.script.test_04stash_add.Testadd#test_add", "labels": [{"name": "parentSuite", "value": "test_api.script"}, {"name": "suite", "value": "test_04stash_add"}, {"name": "subSuite", "value": "Testadd"}, {"name": "host", "value": "yyyyydeMacBook-Pro.local"}, {"name": "thread", "value": "46865-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api.script.test_04stash_add"}]}