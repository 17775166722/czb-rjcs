{"uid":"80e17c5c3ae71c87","name":"test_login[args1]","fullName":"test_api.script.test_01login.TestLogin#test_login","historyId":"e803583ff4e57a9ac49615a6217fed3a","time":{"start":1732796246354,"stop":1732796246486,"duration":132},"status":"broken","statusMessage":"TypeError: argument of type 'NoneType' is not iterable","statusTrace":"self = <test_api.script.test_01login.TestLogin object at 0x153619120>\nargs = {'casename': '登录', 'data': {'code': None, 'login_password': 123456, 'login_username': '1000@xiaotao', 'nature': True, ...}}\n\n    @pytest.mark.parametrize('args', readline('/Users/yangayangdemac/pythonProject/SDYERP/test_api/data/login.yml'))\n    def test_login(self,args):\n        data1=args.get(\"data\",{})\n        username=data1.get(\"login_username\")\n        password = data1.get(\"login_password\")\n        # 根据 need_captcha 的值判断是否需要固定的验证码和 SN\n        if args.get('data').get('need_captcha'):\n            # 尝试获取验证码和 SN，最多尝试三次\n            for attempt in range(3):\n                code, sn = None, None  # 初始化验证码和 SN 为 None\n                for attempt in range(3):\n                    # 获取验证码和 SN\n                    code, sn = self.login_api.get_code(username=username)\n                    if code and sn:  # 如果验证码和 SN 获取成功，跳出循环\n                        break\n                    else:\n                        print(f\"验证码获取失败，尝试第 {attempt + 1} 次...\")\n                        time.sleep(2)  # 加个延迟，避免频繁请求导致被封\n    \n                # 如果三次尝试都失败，抛出异常\n                if not code or not sn:\n                    raise ValueError(\"获取验证码失败，请检查验证码识别服务！\")\n        else:\n            code, sn = \"dummy_code\", \"dummy_sn\"  # 使用固定的验证码和 SN\n    \n        login_data = {\n            \"username\": username,\n            \"password\": password,\n            \"sn\": sn,\n            \"captcha\": code\n        }\n        res_l = self.login_api.login(test_data=login_data)\n        print(\"sn\",sn,\"code\",code)\n        print(res_l.json())\n        # 断言\n        if data1.get(\"nature\"):\n>           assert 'token' in res_l.json().get(\"data\")\nE           TypeError: argument of type 'NoneType' is not iterable\n\ntest_api/script/test_01login.py:59: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1732796246354,"stop":1732796246354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"test_api.script"},{"name":"suite","value":"test_01login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"yyyyydeMacBook-Pro.local"},{"name":"thread","value":"49177-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_api.script.test_01login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"args","value":"{'casename': '登录', 'data': {'login_username': '1000@xiaotao', 'login_password': 123456, 'sn': None, 'code': None, 'need_captcha': True, 'nature': True}}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"80e17c5c3ae71c87.json","parameterValues":["{'casename': '登录', 'data': {'login_username': '1000@xiaotao', 'login_password': 123456, 'sn': None, 'code': None, 'need_captcha': True, 'nature': True}}"]}