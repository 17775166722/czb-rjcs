{"uid":"a832ce17c7cd1e12","name":"test_add[args7]","fullName":"test_api.script.test_07purchase_add.Testadd#test_add","historyId":"4000de31afba18b0a2f800e20aee858c","time":{"start":1732946121090,"stop":1732946121403,"duration":313},"status":"failed","statusMessage":"AssertionError: assert 400 == 200\n +  where 200 = <test_api.script.test_07purchase_add.Testadd object at 0x13e526410>.code","statusTrace":"self = <test_api.script.test_07purchase_add.Testadd object at 0x13e526410>\nargs = {'casename': '采购订单', 'data': {'expectArriveDate': '2024-12-28', 'login_password': 123456, 'login_username': '1000@superadmin', 'payTypes': [{'id': 2, 'payAmount': 5}], ...}}\n\n    @pytest.mark.parametrize('args', readline('/Users/yangayangdemac/pythonProject/SDYERP/test_api/data/purchase_add.yml'))\n    def test_add(self,args):\n        data1=args.get(\"data\",{})\n        scId=data1.get(\"scId\")\n        supplierId=data1.get(\"supplierId\")\n        purchaserId=data1.get(\"purchaserId\")\n        expectArriveDate=data1.get(\"expectArriveDate\")\n        payTypes=data1.get(\"payTypes\")\n        products=data1.get(\"products\")\n        user = data1.get(\"login_username\")\n        pwd = data1.get(\"login_password\")\n        is_true = data1.get(\"is_true\",False)\n        is_low = data1.get(\"is_low\",False)\n        login_data = {\n            \"scId\": scId,\n            \"supplierId\": supplierId,\n            \"purchaserId\": purchaserId,\n            \"expectArriveDate\": expectArriveDate,\n            \"payTypes\": payTypes,\n            \"products\": products,\n        }\n        rev_add=self.add_api.add(username=user,password=pwd,test_data=login_data)\n        print(rev_add.json())\n        self.msg = rev_add.json().get(\"msg\")\n        self.code = rev_add.json().get(\"code\")\n        print(self.code)\n        if is_true:\n            print(is_true)\n            assert 200 == self.code\n            assert \"success\" in self.msg\n        elif is_low:\n            assert 403 == self.code\n            assert \"无系统权限\" in self.msg\n        else:\n>           assert 400 == self.code\nE           assert 400 == 200\nE            +  where 200 = <test_api.script.test_07purchase_add.Testadd object at 0x13e526410>.code\n\ntest_api/script/test_07purchase_add.py:51: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1732946121090,"stop":1732946121090,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"test_api.script"},{"name":"suite","value":"test_07purchase_add"},{"name":"subSuite","value":"Testadd"},{"name":"host","value":"yyyyydeMacBook-Pro.local"},{"name":"thread","value":"74854-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_api.script.test_07purchase_add"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"args","value":"{'casename': '采购订单', 'data': {'login_username': '1000@superadmin', 'login_password': 123456, 'scId': 1859802908804124672, 'supplierId': 1861103558770954240, 'purchaserId': 1, 'expectArriveDate': '2024-12-28', 'payTypes': [{'id': 2, 'payAmount': 5}], 'products': [{'productId': 1861727812411592705, 'purchasePrice': 11, 'purchaseNum': 12}, {'productId': 1861727050776317952, 'purchasePrice': 11, 'purchaseNum': 12}]}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b250021f217e2ff1","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 200 = <test_api.script.test_07purchase_add.Testadd object at 0x1617a64d0>.code","time":{"start":1732862747584,"stop":1732862747890,"duration":306}},{"uid":"5855c231368cdb4","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 200 = <test_api.script.test_07purchase_add.Testadd object at 0x13010e590>.code","time":{"start":1732813367566,"stop":1732813367855,"duration":289}},{"uid":"486c93ff81461138","status":"failed","statusDetails":"AssertionError: assert 400 == 200\n +  where 200 = <test_api.script.test_07purchase_add.Testadd object at 0x158a4d3c0>.code","time":{"start":1732796259283,"stop":1732796259631,"duration":348}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a832ce17c7cd1e12.json","parameterValues":["{'casename': '采购订单', 'data': {'login_username': '1000@superadmin', 'login_password': 123456, 'scId': 1859802908804124672, 'supplierId': 1861103558770954240, 'purchaserId': 1, 'expectArriveDate': '2024-12-28', 'payTypes': [{'id': 2, 'payAmount': 5}], 'products': [{'productId': 1861727812411592705, 'purchasePrice': 11, 'purchaseNum': 12}, {'productId': 1861727050776317952, 'purchasePrice': 11, 'purchaseNum': 12}]}}"]}